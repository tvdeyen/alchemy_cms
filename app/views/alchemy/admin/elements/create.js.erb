(function() {
  var payload,
      element = <%== Alchemy::ElementSerializer.new(@element, scope: current_ability).to_json %>;

<%- if @cutted_element_id -%>
  // $('.element-editor[data-element-id="<%= @cutted_element_id %>"]').remove();
<%- end -%>

<%- if @page.can_have_cells? -%>
  // if ($('#cells').length == 0) {
  //   Alchemy.buildTabbedCells('<%= Alchemy.t(:main_content) %>');
  // }
  // Alchemy.selectOrCreateCellTab('<%= @cell_name %>', '<%= @cell.nil? ? Alchemy.t(:main_content) : @cell.name_for_label %>');
<%- end -%>

<%- if @element.parent_element -%>
  payload = {
    parent_id: <%= @element.parent_element_id %>,
    element: element
  };
<%- else -%>
  payload = {element: element};
<%- end -%>

<%- if @insert_at_top -%>
  payload.insert_at_top = true;
<%- end -%>

  Alchemy.vuexStore.commit('addElement', payload);
  Alchemy.growl('<%= Alchemy.t(:successfully_added_element) %>');
  Alchemy.closeCurrentDialog();
  Alchemy.reloadPreview('<%= @element.id %>');
  $el = $('#element_<%= @element.id %>');
  $el.trigger('FocusElementEditor.Alchemy');

<%- if @clipboard.blank? -%>
  // $('#clipboard_button .icon.clipboard').removeClass('full');
<%- end -%>
})();
